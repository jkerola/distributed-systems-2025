services:
  control:
    container_name: control
    build:
      context: control
      dockerfile: dockerfile
    ports:
      - 5000:8080
    environment:
      - CALCULATOR_URI=calculator:50052
      - KAFKA_URI=broker:29092
      - KAFKASERVICE_URI=http://kafkaservice:8084
    depends_on:
      - calculator
      - kafkaservice

  calculator:
    build:
      context: calculator
      dockerfile: dockerfile
    ports:
      - 50052:50052
    depends_on:
      - mongo
    environment:
      - MONGO_URI=mongodb://root:example@mongo:27017
      - GRPC_DNS_RESOLVER=native

  kafkaservice:
    build:
      context: kafkaservice
      dockerfile: dockerfile
    ports:
      - 8084:8084
    depends_on:
      - broker
    environment:
      KAFKA_URI: broker:29092

  broker:
    image: apache/kafka:latest
    container_name: broker
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:29093
      KAFKA_LISTENERS: PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk

  mongo:
    image: docker.io/mongo:latest
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    image: docker.io/mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    # command:
    #   - '--config.file=/etc/prometheus.yaml'
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

  grafana:
    image: grafana/grafana-enterprise:9.4.7
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=root
      - GF_SECURITY_ADMIN_USER=root

    volumes:
      - "grafana_storage:/var/lib/grafana"

  pyspy:
    build:
      context: pyspy
      dockerfile: dockerfile
    pid: "host"
    privileged: "true"
    volumes:
      - .:/profiles
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    volumes: 
      - /proc:/host/proc:ro 
      - /sys:/host/sys:ro 
      - /:/rootfs:ro 
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.rootfs=/rootfs' 
      - '--path.sysfs=/host/sys' 
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100
  locust:
    image: locustio/locust
    ports:
      - "8089:8089"
    volumes:
      - ./:/mnt/locust
    command: -f /mnt/locust/load_tests.py

  locust-metrics-exporter:
    container_name: locust-metrics-exporter
    image: containersol/locust_exporter
    ports:
      - "9646:9646"
    environment:
      - LOCUST_EXPORTER_URI=http://locust:8089
    depends_on:
      - locust

networks:
  default:
    driver: bridge

volumes:
  grafana_storage: {}
  prometheus_data: {}
